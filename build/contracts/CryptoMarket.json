{
  "contractName": "CryptoMarket",
  "abi": [
    {
      "inputs": [],
      "name": "cryptomarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkUserRegistration",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"checkUserRegistration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cryptomarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CryptoMarket.sol\":\"CryptoMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"project:/contracts/CryptoMarket.sol\":{\"keccak256\":\"0x4ee24f5887fb7f3ef4b0c093ff978c8cab10cf1e418513e92e6e09ec594dba7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4caa6609ab279ed256fb0b8984f0cd082ea72564aecb84f345d1f11359d4484\",\"dweb:/ipfs/QmPFgCpAAJ3Qd8mhPeJf55AaenAsbCD2c4Nt3v5VU3K739\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061028c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301315031146100465780634d3820eb146100505780636252194d1461005a575b600080fd5b61004e610078565b005b6100586100be565b005b6100626101cd565b60405161006f919061023b565b60405180910390f35b33600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101cb5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60008115159050919050565b61023581610220565b82525050565b6000602082019050610250600083018461022c565b9291505056fea26469706673582212206810a759ecac1d92af5aed50909b523a0af6ec74b2bccecc706ed1601676369864736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806301315031146100465780634d3820eb146100505780636252194d1461005a575b600080fd5b61004e610078565b005b6100586100be565b005b6100626101cd565b60405161006f919061023b565b60405180910390f35b33600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101cb5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60008115159050919050565b61023581610220565b82525050565b6000602082019050610250600083018461022c565b9291505056fea26469706673582212206810a759ecac1d92af5aed50909b523a0af6ec74b2bccecc706ed1601676369864736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:431:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:3",
                "type": ""
              }
            ],
            "src": "7:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:3"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:3",
                "type": ""
              }
            ],
            "src": "103:109:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:3",
                "type": ""
              }
            ],
            "src": "218:210:3"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "116:1096:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "116:1096:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;391:110;;;:::i;:::-;;626:211;;;:::i;:::-;;509:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;391:110;483:10;444:18;:36;;;:49;;;;;;;;;;;;;;;;;;391:110::o;626:211::-;673:13;:25;687:10;673:25;;;;;;;;;;;;;;;;;;;;;;;;;668:162;;742:4;714:13;:25;728:10;714:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;761:18;:40;;807:10;761:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:162;626:211::o;509:109::-;562:4;585:13;:25;599:10;585:25;;;;;;;;;;;;;;;;;;;;;;;;;578:32;;509:109;:::o;7:90:3:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.16;\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract CryptoMarket{\r\n\r\n    struct ContractProperties{\r\n        address CryptoMarketOwner;\r\n        address[] registeredUserAdderss;\r\n        string[] items;\r\n    }\r\n    \r\n    mapping (address => bool) hasRegistered;\r\n   \r\n    ContractProperties contractProperties;\r\n\r\n    function cryptomarket() public{\r\n         \r\n         contractProperties.CryptoMarketOwner = msg.sender;\r\n    }\r\n\r\n    function checkUserRegistration() public view returns(bool){\r\n        return hasRegistered[msg.sender];\r\n    }\r\n\r\n    function registerUser() public {\r\n        if (!hasRegistered[msg.sender]){\r\n            hasRegistered[msg.sender] = true;\r\n            contractProperties.registeredUserAdderss.push(msg.sender);\r\n        }\r\n    }\r\n\r\n    // function addItem(string memory item ) public  {\r\n    //     string memory Item = item;\r\n    //     string memory length = Strings.toString((bytes(item).length));\r\n    //     address setter = msg.sender;\r\n    //     string memory item_details = string.concat(Item,\",\",length,\",\",setter);\r\n    //     contractProperties.items.push(item_details);\r\n    // }\r\n\r\n    \r\n}",
  "sourcePath": "D:\\BlockChain-Project\\Dapp_Project_2\\contracts\\CryptoMarket.sol",
  "ast": {
    "absolutePath": "project:/contracts/CryptoMarket.sol",
    "exportedSymbols": {
      "CryptoMarket": [
        294
      ],
      "Strings": [
        225
      ]
    },
    "id": 295,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 227,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 228,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 295,
        "sourceUnit": 226,
        "src": "61:51:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CryptoMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 294,
        "linearizedBaseContracts": [
          294
        ],
        "name": "CryptoMarket",
        "nameLocation": "125:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CryptoMarket.ContractProperties",
            "id": 237,
            "members": [
              {
                "constant": false,
                "id": 230,
                "mutability": "mutable",
                "name": "CryptoMarketOwner",
                "nameLocation": "190:17:1",
                "nodeType": "VariableDeclaration",
                "scope": 237,
                "src": "182:25:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 229,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "182:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 233,
                "mutability": "mutable",
                "name": "registeredUserAdderss",
                "nameLocation": "228:21:1",
                "nodeType": "VariableDeclaration",
                "scope": 237,
                "src": "218:31:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 232,
                  "nodeType": "ArrayTypeName",
                  "src": "218:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 236,
                "mutability": "mutable",
                "name": "items",
                "nameLocation": "269:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 237,
                "src": "260:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "id": 235,
                  "nodeType": "ArrayTypeName",
                  "src": "260:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                    "typeString": "string[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractProperties",
            "nameLocation": "153:18:1",
            "nodeType": "StructDefinition",
            "scope": 294,
            "src": "146:136:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 241,
            "mutability": "mutable",
            "name": "hasRegistered",
            "nameLocation": "320:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "294:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 240,
              "keyType": {
                "id": 238,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "303:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "294:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 239,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "314:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 244,
            "mutability": "mutable",
            "name": "contractProperties",
            "nameLocation": "364:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 294,
            "src": "345:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractProperties_$237_storage",
              "typeString": "struct CryptoMarket.ContractProperties"
            },
            "typeName": {
              "id": 243,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 242,
                "name": "ContractProperties",
                "nameLocations": [
                  "345:18:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 237,
                "src": "345:18:1"
              },
              "referencedDeclaration": 237,
              "src": "345:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractProperties_$237_storage_ptr",
                "typeString": "struct CryptoMarket.ContractProperties"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "421:80:1",
              "statements": [
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 247,
                        "name": "contractProperties",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "444:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractProperties_$237_storage",
                          "typeString": "struct CryptoMarket.ContractProperties storage ref"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "463:17:1",
                      "memberName": "CryptoMarketOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 230,
                      "src": "444:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 250,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "483:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "487:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "483:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "444:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "444:49:1"
                }
              ]
            },
            "functionSelector": "01315031",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cryptomarket",
            "nameLocation": "400:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:1"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:1"
            },
            "scope": 294,
            "src": "391:110:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "567:51:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 260,
                      "name": "hasRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 241,
                      "src": "585:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 263,
                    "indexExpression": {
                      "expression": {
                        "id": 261,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "599:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "603:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "599:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "585:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 259,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "578:32:1"
                }
              ]
            },
            "functionSelector": "6252194d",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUserRegistration",
            "nameLocation": "518:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:2:1"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "562:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:6:1"
            },
            "scope": 294,
            "src": "509:109:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "657:180:1",
              "statements": [
                {
                  "condition": {
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "672:26:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 269,
                        "name": "hasRegistered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "673:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "expression": {
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "687:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "691:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "687:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "673:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 291,
                  "nodeType": "IfStatement",
                  "src": "668:162:1",
                  "trueBody": {
                    "id": 290,
                    "nodeType": "Block",
                    "src": "699:131:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 274,
                              "name": "hasRegistered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 241,
                              "src": "714:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 277,
                            "indexExpression": {
                              "expression": {
                                "id": 275,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "728:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "732:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "728:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "714:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "742:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "714:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 280,
                        "nodeType": "ExpressionStatement",
                        "src": "714:32:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "807:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "811:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "807:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 281,
                                "name": "contractProperties",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "761:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ContractProperties_$237_storage",
                                  "typeString": "struct CryptoMarket.ContractProperties storage ref"
                                }
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "780:21:1",
                              "memberName": "registeredUserAdderss",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 233,
                              "src": "761:40:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "802:4:1",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "761:45:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "761:57:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "761:57:1"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4d3820eb",
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nameLocation": "635:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:2:1"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "657:0:1"
            },
            "scope": 294,
            "src": "626:211:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 295,
        "src": "116:1096:1",
        "usedErrors": []
      }
    ],
    "src": "35:1177:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x471123434031570aDeA1b1c882447F1e3355B2Be",
      "transactionHash": "0x7c27c05e4d424383d857f1b115993d203bb610ffd4952cf72e92fb6214a9ba0d"
    }
  },
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-08-27T12:08:06.837Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}